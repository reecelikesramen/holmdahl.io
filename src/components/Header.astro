---
import '@/styles/search.css';
import { Moon, Sun } from 'lucide-react';
import Navigation from './Navigation.astro';
import SearchButton from './SearchButton';

interface Props {
  title?: string;
  showThemeToggle?: boolean;
}

const { title = "holmdahl.io", showThemeToggle = true } = Astro.props;
---

<header class="flex flex-col py-2 sm:py-4 pl-3.5 pr-0 md:pl-6 md:pr-2">
  <nav class="flex flex-col xs:flex-row xs:justify-between xs:items-center max-w-screen-lg w-full justify-self-center place-self-center gap-2 xs:gap-0">
    <!-- Left side: Site title and theme toggle -->
    <div class="flex items-center gap-0 sm:gap-2">
      <a href="/" title={title} class="text-lg sm:text-2xl font-extrabold no-underline text-primary-color">
        {title}
      </a>
      
      <!-- Theme toggle next to site title -->
      {showThemeToggle && (
        <button id="theme-toggle" title="Toggle theme" aria-label="Toggle theme" class="bg-transparent border-none cursor-pointer p-1">
          <Moon className="moon-icon w-5 h-5" />
          <Sun className="sun-icon w-5 h-5" />
        </button>
      )}
    </div>
    
    <!-- Right side: Navigation and Search -->
    <div class="flex items-center gap-2 justify-start sm:justify-end">
      <Navigation currentPath={Astro.url.pathname} />
      <SearchButton client:visible />
    </div>
  </nav>
</header>

<script is:inline>
  // Theme toggle functionality
  function toggleTheme() {
    if (document.documentElement.classList.contains("dark")) {
      document.documentElement.classList.remove("dark");
      localStorage.setItem("theme", "light");
    } else {
      document.documentElement.classList.add("dark");
      localStorage.setItem("theme", "dark");
    }
  }
  
  // Bind theme toggle event listener
  function bindThemeToggle() {
    const themeToggle = document.getElementById("theme-toggle");
    if (themeToggle && !themeToggle.hasAttribute("data-bound")) {
      themeToggle.addEventListener("click", toggleTheme);
      themeToggle.setAttribute("data-bound", "true");
    }
  }
  
  // Initialize on page load
  bindThemeToggle();
  
  // Re-bind after Astro view transitions (if used)
  document.addEventListener("astro:after-swap", bindThemeToggle);
</script>

<style>
  .moon-icon {
    display: block;
  }
  
  .sun-icon {
    display: none;
  }
  
  html.dark .moon-icon {
    display: none;
  }
  
  html.dark .sun-icon {
    display: block;
  }
</style> 