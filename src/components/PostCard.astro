---
import { Picture } from "astro:assets";
import type { CollectionEntry } from "astro:content";

interface Props {
  post: CollectionEntry<"posts">["data"];
  url: string;
  isFirst3?: boolean;
}

const { post, url, isFirst3 = false } = Astro.props;
---

<article
  class="relative mb-6 rounded-lg bg-entry-color border border-border-color transition-transform hover:scale-[1.01] overflow-hidden"
>
  <!-- Cover Image -->
  {
    post.cover && (
      <div class="w-full">
        <Picture
          src={post.cover.image}
          alt={post.cover.alt}
          class="w-full h-48 object-cover select-none pointer-events-none"
          draggable="false"
          loading={isFirst3 ? "eager" : "lazy"}
          widths={[400, 800, 1200]}
          sizes="(max-width: 640px) 400px, (max-width: 1024px) 800px, 1200px"
        />
      </div>
    )
  }

  <div class="p-6">
    <header>
      <h2
        class="flex items-center gap-2 my-1 text-lg font-semibold text-primary-color"
      >
        {post.title}
        {
          post.draft && (
            <span class="text-tertiary-color" title="Draft">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                height="20"
                viewBox="0 -960 960 960"
                fill="currentColor"
              >
                <path d="M160-410v-60h300v60H160Zm0-165v-60h470v60H160Zm0-165v-60h470v60H160Zm360 580v-123l221-220q9-9 20-13t22-4q12 0 23 4.5t20 13.5l37 37q9 9 13 20t4 22q0 11-4.5 22.5T862.09-380L643-160H520Zm300-263-37-37 37 37ZM580-220h38l121-122-18-19-19-18-122 121v38Zm141-141-19-18 37 37-18-19Z" />
              </svg>
            </span>
          )
        }
      </h2>
    </header>

    {
      post.description && (
        <div class="my-2 text-content-color">
          <p>{post.description}</p>
        </div>
      )
    }

    <footer class="text-secondary-color text-sm">
      <span>
        {
          post.pubDate.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }
      </span>
      {
        post.showReadingTime && post.minutesRead && (
          <span>&nbsp;·&nbsp;{post.minutesRead}</span>
        )
      }
      {
        post.tags && post.tags.length > 0 && (
          <span>
            &nbsp;·&nbsp;
            {post.tags.map((tag, i) => (
              <>
                <a href={`/tags/${tag}`} class="relative z-20 text-secondary-color hover:no-underline hover:text-primary-color transition-colors">{tag}</a>
                {i < (post.tags?.length || 0) - 1 ? ", " : ""}
              </>
            ))}
          </span>
        )
      }
    </footer>
  </div>

  <a
    class="absolute inset-0 z-10"
    aria-label={`post link to ${post.title}`}
    href={url}></a>
</article>

