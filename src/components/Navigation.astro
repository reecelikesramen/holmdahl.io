---
interface Props {
  currentPath: string;
}

const { currentPath } = Astro.props;

const navItems = [
  { href: '/', label: 'Home' },
  { href: '/projects', label: 'Projects' },
  { href: '/posts', label: 'Posts' },
  { href: '/about', label: 'About' }
];
---

<nav class="w-full">
  <ul id="menu" class="flex list-none m-0 p-0 overflow-x-auto justify-start sm:justify-center gap-1.5 sm:gap-2 md:gap-3 text-sm sm:text-base md:text-lg font-medium">
    {navItems.map((item) => {
      const isActive = currentPath === item.href || (item.href !== '/' && currentPath.startsWith(item.href));
      return (
        <li>
          <a 
            href={item.href} 
            title={item.label} 
            class={`no-underline relative hover:underline decoration-1 underline-offset-4 sm:underline-offset-5 text-(--secondary-color) transition-all duration-300 ease-out hover:brightness-105 dark:hover:brightness-108 ${isActive ? '' : ''}`}
          >
            <span class={`${isActive ? 'underline decoration-2 underline-offset-4 sm:underline-offset-5 text-(--primary-color)' : ''}`}>
              {item.label}
            </span>
          </a>
        </li>
      );
    })}
  </ul>
</nav>

<script is:inline>
  // Menu scroll position handling
  let menu = document.getElementById("menu");
  if (menu) {
    menu.scrollLeft = localStorage.getItem("menu-scroll-position") || 0;
    menu.onscroll = function () {
      localStorage.setItem("menu-scroll-position", menu.scrollLeft);
    };
  }
</script> 