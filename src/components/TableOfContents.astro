---
import '@/styles/critical.css';

interface Heading {
  depth: number;
  slug: string;
  text: string;
}

interface Props {
  headings: Heading[];
  isOpen?: boolean;
}

const { headings, isOpen = false } = Astro.props;

// Filter and organize headings (h1, h2, and h3)
const filteredHeadings = headings.filter(h => h.depth >= 1 && h.depth <= 3);
---

{filteredHeadings.length > 0 && (
  <div class="toc-container mb-6 md:mb-8">
    <details class="toc-details" open={isOpen}>
      <summary class="toc-summary">
        <svg class="toc-chevron" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
          <path d="M6.573 4.427l3.396 3.396a.25.25 0 010 .354l-3.396 3.396a.25.25 0 01-.427-.177V4.604a.25.25 0 01.427-.177z"/>
        </svg>
        <span class="toc-title">Table of Contents</span>
      </summary>
      
      <div class="toc-content">
        <nav class="toc-nav">
          <ul class="toc-list">
            {filteredHeadings.map((heading) => (
              <li class={`toc-item toc-depth-${heading.depth}`}>
                <a 
                  href={`#${heading.slug}`} 
                  class="toc-link"
                  data-toc-id={heading.slug}
                >
                  {heading.text}
                </a>
              </li>
            ))}
          </ul>
        </nav>
      </div>
    </details>
  </div>
)}

<style>
  @reference "@/styles/critical.css";

  .toc-container {
    @apply border border-border rounded-lg bg-entry-color;
  }

  .toc-details {
    @apply w-full;
  }

  .toc-summary {
    @apply flex items-center gap-2 p-4 cursor-pointer select-none font-medium text-foreground;
    @apply hover:bg-muted/50 transition-colors;
    list-style: none;
  }

  .toc-summary::-webkit-details-marker {
    display: none;
  }

  .toc-chevron {
    @apply transition-transform duration-200 text-muted-foreground;
    flex-shrink: 0;
  }

  .toc-details[open] .toc-chevron {
    @apply rotate-90;
  }

  .toc-title {
    @apply text-sm font-semibold;
  }

  .toc-content {
    @apply border-t border-border;
  }

  .toc-nav {
    @apply p-4 pt-3;
  }

  .toc-list {
    @apply list-none m-0 p-0 space-y-1;
  }

  .toc-item {
    @apply text-sm;
  }

  .toc-depth-1 {
    @apply ml-0 font-medium;
  }

  .toc-depth-2 {
    @apply ml-4;
  }

  .toc-depth-3 {
    @apply ml-8;
  }

  .toc-link {
    @apply block py-1 px-2 rounded text-muted-foreground hover:text-foreground;
    @apply hover:bg-muted/30 transition-colors no-underline;
  }
</style>

<script>
  // TOC-specific initialization (smooth scroll handled by ContentLayout)
  function initTocObserver() {
    // Future TOC-specific functionality can go here
    // Smooth scroll is already handled by ContentLayout for all anchor links
  }

  // Initialize on DOM ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initTocObserver);
  } else {
    initTocObserver();
  }

  // Re-initialize on view transitions
  document.addEventListener('astro:after-swap', initTocObserver);
</script> 