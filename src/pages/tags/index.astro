---
import MainLayout from '@/layouts/MainLayout.astro';

const postModules = import.meta.glob('../posts/*.{md,mdx}');
const posts = await Promise.all(Object.values(postModules).map(fn => fn())) as any[];

// Create a map to count tags
const tagCounts: Map<string, number> = new Map();

posts
  .filter(post => !post.frontmatter.draft)
  .forEach(post => {
    const tags: string[] = post.frontmatter.tags || [];
    tags.forEach((tag: string) => {
      tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);
    });
  });

// Sort tags by count (descending) then alphabetically
const sortedTags: Array<[string, number]> = Array.from(tagCounts.entries())
  .sort((a, b) => {
    if (b[1] !== a[1]) return b[1] - a[1]; // Sort by count descending
    return a[0].localeCompare(b[0]); // Then alphabetically
  });
---

<MainLayout title="Tags | holmdahl.io" description="Browse all post tags">
  <div class="mb-4 text-sm text-secondary-text">
    <a href="/" class="text-secondary-text hover:text-primary hover:underline no-underline">Home</a> » 
    <a href="/posts" class="text-secondary-text hover:text-primary hover:underline no-underline">Posts</a> » 
    <span>Tags</span>
  </div>

  <header class="mb-8">
    <h1 class="mb-2">Tags</h1>
    <div class="text-secondary-text text-lg">
      Browse posts by tags
    </div>
  </header>
  
  {sortedTags.length > 0 ? (
    <div class="flex flex-wrap gap-4">
      {sortedTags.map(([tag, count]) => (
        <a 
          href={`/tags/${tag}`} 
          class="inline-flex items-center gap-2 py-2 px-4 rounded-lg bg-card border border-border no-underline text-content hover:bg-hover transition-colors"
        >
          <span>{tag}</span>
          <span class="text-sm text-tertiary-text">({count})</span>
        </a>
      ))}
    </div>
  ) : (
    <div class="text-secondary-text">
      No tags found.
    </div>
  )}
</MainLayout>

<style>
  .page-header {
    margin-bottom: 2rem;
  }
  
  .breadcrumbs {
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: var(--secondary-text-color);
  }
  
  .breadcrumbs a {
    color: var(--secondary-text-color);
    text-decoration: none;
  }
  
  .breadcrumbs a:hover {
    color: var(--primary-color);
    text-decoration: underline;
  }
  
  h1 {
    margin-bottom: 0.5rem;
  }
  
  .archive-description {
    color: var(--secondary-text-color);
    font-size: 1.1rem;
    margin-bottom: 2rem;
  }
  
  .tags-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }
  
  .tag-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    background-color: var(--card-background);
    border: 1px solid var(--border-color);
    border-radius: 0.25rem;
    color: var(--text-color);
    text-decoration: none;
    transition: transform 0.1s;
  }
  
  .tag-item:hover {
    transform: scale(1.05);
    background-color: var(--hover-color);
  }
  
  .tag-count {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 1.5rem;
    height: 1.5rem;
    padding: 0 0.25rem;
    border-radius: 999px;
    background-color: var(--primary-color);
    color: white;
    font-size: 0.75rem;
    font-weight: 700;
  }
</style> 