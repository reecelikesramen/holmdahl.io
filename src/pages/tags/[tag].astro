---
import MainLayout from '../../layouts/MainLayout.astro';
import PostCard from '../../components/PostCard.astro';
import { withBase } from '@/utils/paths';

export async function getStaticPaths() {
  const posts = await Astro.glob('../posts/*.{md,mdx}');
  
  // Create a map to count tags
  const tagMap: Map<string, number> = new Map();
  const tagPosts: Map<string, any[]> = new Map();
  
  posts
    .filter(post => !post.frontmatter.draft)
    .forEach(post => {
      const tags: string[] = post.frontmatter.tags || [];
      tags.forEach((tag: string) => {
        tagMap.set(tag, (tagMap.get(tag) || 0) + 1);
        
        if (!tagPosts.has(tag)) {
          tagPosts.set(tag, []);
        }
        tagPosts.get(tag)!.push({
          title: post.frontmatter.title,
          url: post.url,
          description: post.frontmatter.description,
          pubDate: new Date(post.frontmatter.pubDate),
          draft: post.frontmatter.draft,
          tags: post.frontmatter.tags || [],
          readingTime: post.frontmatter.readingTime
        });
      });
    });

  return Array.from(tagPosts.keys()).map((tag: string) => {
    return {
      params: { tag },
      props: { 
        posts: tagPosts.get(tag)!.sort((a, b) => 
          b.pubDate.getTime() - a.pubDate.getTime()
        ),
        tag,
        count: tagMap.get(tag) || 0
      }
    };
  });
}

const { posts, tag, count } = Astro.props;
---

<MainLayout title={`Posts tagged "${tag}" | holmdahl.io`} description={`All posts tagged with ${tag}`}>
  <div class="mb-4 text-sm text-secondary-text">
    <a href={withBase('/')} class="text-secondary-text hover:text-primary hover:underline no-underline">Home</a> » 
    <a href={withBase('/posts')} class="text-secondary-text hover:text-primary hover:underline no-underline">Posts</a> » 
    <a href={withBase('/tags')} class="text-secondary-text hover:text-primary hover:underline no-underline">Tags</a> » 
    <span>{tag}</span>
  </div>

  <header class="mb-8">
    <h1 class="mb-2">Posts tagged "{tag}"</h1>
    <div class="text-secondary-text text-lg">
      {count} post{count !== 1 ? 's' : ''}
    </div>
  </header>
  
  {posts.length > 0 ? (
    <div class="space-y-6">
      {posts.map((post, index) => (
        <PostCard post={post} isFirst={index === 0} />
      ))}
    </div>
  ) : (
    <div class="text-secondary-text">
      No posts found with this tag.
    </div>
  )}
</MainLayout>

<style>
  .page-header {
    margin-bottom: 2rem;
  }
  
  .breadcrumbs {
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: var(--secondary-text-color);
  }
  
  .breadcrumbs a {
    color: var(--secondary-text-color);
    text-decoration: none;
  }
  
  .breadcrumbs a:hover {
    color: var(--primary-color);
    text-decoration: underline;
  }
  
  h1 {
    margin-bottom: 0.5rem;
  }
  
  .archive-description {
    color: var(--secondary-text-color);
    font-size: 1.1rem;
  }
</style> 