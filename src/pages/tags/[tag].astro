---
import { getCollection } from 'astro:content';
import MainLayout from '@/layouts/MainLayout.astro';
import PostCard from '@/components/PostCard.astro';

export async function getStaticPaths() {
  // Get all posts from content collections (projects don't have tags)
  const posts = await getCollection("posts");
  
  // Filter out drafts
  const publishedPosts = posts.filter(post => !post.data.draft);
  
  // Create a map to count tags and store content by tag
  const tagMap: Map<string, number> = new Map();
  const tagContent: Map<string, any[]> = new Map();
  
  // Process posts
  publishedPosts.forEach(post => {
    const tags: string[] = post.data.tags || [];
    tags.forEach((tag: string) => {
      tagMap.set(tag, (tagMap.get(tag) || 0) + 1);
      
      if (!tagContent.has(tag)) {
        tagContent.set(tag, []);
      }
      tagContent.get(tag)!.push({
        data: {
          title: post.data.title,
          description: post.data.description,
          pubDate: post.data.pubDate,
          tags: post.data.tags || [],
          minutesRead: post.data.minutesRead,
          showReadingTime: post.data.showReadingTime,
          cover: post.data.cover,
          coverEffects: post.data.coverEffects
        },
        url: `/posts/${post.slug}`,
        type: 'post'
      });
    });
  });

  return Array.from(tagContent.keys()).map((tag: string) => {
    return {
      params: { tag },
      props: { 
        content: tagContent.get(tag)!.sort((a, b) => {
          // Sort posts by date (descending)
          return b.data.pubDate.getTime() - a.data.pubDate.getTime();
        }),
        tag,
        count: tagMap.get(tag) || 0
      }
    };
  });
}

const { content, tag, count } = Astro.props;
---

<MainLayout title={`Posts tagged "${tag}"`} description={`All posts tagged with ${tag}`}>

  <header class="mb-8">
    <h1 class="text-xl sm:text-2xl font-semibold mb-2">Posts tagged "{tag}"</h1>
    <div class="text-secondary-color text-lg">
      {count} post{count !== 1 ? 's' : ''}
    </div>
  </header>
  
  {content.length > 0 ? (
    <div class="space-y-6">
      {content.map((item, index) => (
        <PostCard data={item.data} url={item.url} aboveTheFold={index < 2} />
      ))}
    </div>
  ) : (
    <div class="text-secondary-color">
      No posts found with this tag.
    </div>
  )}
</MainLayout> 