---
import MainLayout from './MainLayout.astro';

interface Props {
  title: string;
  description?: string;
  image?: string;
  date?: Date;
  tags?: string[];
  draft?: boolean;
  hideHeader?: boolean;
  hideMeta?: boolean;
  showToc?: boolean;
}

const { 
  title, 
  description, 
  image, 
  date, 
  tags = [], 
  draft = false,
  hideHeader = false,
  hideMeta = true, // Default to true for simple content pages
  showToc = false 
} = Astro.props;
---

<MainLayout title={title} description={description} image={image}>
  <article class="post-single max-w-none w-full">
    {!hideHeader && (
      <header class="post-header mb-8">
        <h1 class="post-title text-3xl md:text-4xl font-bold mb-4">
          {title}
          {draft && (
            <span class="entry-hint inline-block ml-2 text-base" title="Draft">
              <svg class="inline w-6 h-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960" fill="currentColor">
                <path d="M160-410v-60h300v60H160Zm0-165v-60h470v60H160Zm0-165v-60h470v60H160Zm360 580v-123l221-220q9-9 20-13t22-4q12 0 23 4.5t20 13.5l37 37q9 9 13 20t4 22q0 11-4.5 22.5T862.09-380L643-160H520Zm300-263-37-37 37 37ZM580-220h38l121-122-18-19-19-18-122 121v38Zm141-141-19-18 37 37-18-19Z" />
              </svg>
            </span>
          )}
        </h1>
        
        {description && (
          <div class="post-description text-lg text-secondary-color mb-4">
            {description}
          </div>
        )}
        
        {!hideMeta && (date || tags.length > 0) && (
          <div class="post-meta text-sm text-secondary-color mb-6 flex flex-wrap gap-4">
            {date && (
              <time datetime={date.toISOString()}>
                {date.toLocaleDateString('en-US', { 
                  year: 'numeric', 
                  month: 'long', 
                  day: 'numeric' 
                })}
              </time>
            )}
            {tags.length > 0 && (
              <div class="tags flex gap-2">
                {tags.map(tag => (
                  <span class="tag bg-secondary-color/10 px-2 py-1 rounded text-xs">
                    #{tag}
                  </span>
                ))}
              </div>
            )}
          </div>
        )}
      </header>
    )}

    <div class="post-content prose prose-lg max-w-none">
      <slot />
    </div>

    {tags.length > 0 && (
      <footer class="post-footer mt-12 pt-8 border-t border-border-color">
        <ul class="post-tags flex flex-wrap gap-2">
          {tags.map(tag => (
            <li>
              <a 
                href={`/tags/${tag.toLowerCase()}`} 
                class="inline-block bg-secondary-color/10 hover:bg-secondary-color/20 px-3 py-1 rounded-full text-sm transition-colors"
              >
                {tag}
              </a>
            </li>
          ))}
        </ul>
      </footer>
    )}
  </article>
</MainLayout>

<style>
@reference "../styles/global.css";

  .post-single {
    @apply w-full mx-auto px-4 py-8;
    max-width: 56rem; /* Equivalent to max-w-4xl */
  }

  .post-title {
    color: var(--primary-color);
  }

  .post-description {
    color: var(--secondary-color);
  }

  .post-meta {
    color: var(--secondary-color);
  }

  .post-content {
    color: var(--content-color);
    line-height: 1.7;
  }

  .entry-hint {
    color: var(--secondary-color);
  }

  /* Prose styling for markdown content */
  .post-content :global(h1),
  .post-content :global(h2),
  .post-content :global(h3),
  .post-content :global(h4),
  .post-content :global(h5),
  .post-content :global(h6) {
    color: var(--primary-color);
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  .post-content :global(h2) {
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 0.5rem;
  }

  .post-content :global(p) {
    margin-bottom: 1.5rem;
  }

  .post-content :global(a) {
    color: var(--primary-color);
    text-decoration: none;
  }

  .post-content :global(a:hover) {
    text-decoration: underline;
  }

  .post-content :global(code) {
    background-color: var(--code-bg-color);
    color: var(--content-color);
    padding: 0.2rem 0.4rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
  }

  .post-content :global(pre) {
    background-color: var(--code-block-color);
    color: var(--content-color);
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1.5rem 0;
  }

  .post-content :global(pre code) {
    background: none;
    padding: 0;
  }

  .post-content :global(blockquote) {
    border-left: 4px solid var(--tertiary-color);
    padding-left: 1rem;
    margin: 1.5rem 0;
    font-style: italic;
    color: var(--secondary-color);
  }

  .post-content :global(ul),
  .post-content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .post-content :global(li) {
    margin-bottom: 0.5rem;
  }

  .post-footer {
    border-color: var(--border-color);
  }

  .tag,
  .post-tags a {
    background-color: rgba(var(--secondary-color-rgb), 0.1);
    color: var(--secondary-color);
  }

  .post-tags a:hover {
    background-color: rgba(var(--secondary-color-rgb), 0.2);
    text-decoration: none;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .post-single {
      @apply px-4 py-6;
    }
    
    .post-title {
      @apply text-2xl;
    }
    
    .post-meta {
      @apply flex-col gap-2;
    }
  }
</style> 