name: CI (Build & Deploy with PNPM, Astro, LaTeX)

on:
  push:
    branches:
      - main

jobs:
  # -----------------------------------------------------------------------------------
  # 1) Filter job: check if any of src/, public/, or resume.tex changed
  # -----------------------------------------------------------------------------------
  filter:
    name: Check for relevant changes
    runs-on: ubuntu-latest
    outputs:
      astro: ${{ steps.filter.outputs.astro }}
      resume: ${{ steps.filter.outputs.resume }}
      any: ${{ steps.filter.outputs.astro == 'true' || steps.filter.outputs.resume == 'true' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect changes in src/, public/, or resume.tex
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            astro:
              - 'src/**'
              - 'public/**'
              - '.github/workflows/deploy.yml'
              - 'package.json'
              - 'astro.config.mjs'
              - 'tailwind.config.mjs'
              resume:
              - 'resume.tex'

  # -----------------------------------------------------------------------------------
  # 2) Build Astro site: runs only if src/ or public/ changed
  # -----------------------------------------------------------------------------------
  build-astro:
    name: Build Astro site
    needs: filter
    if: needs.filter.outputs.astro == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js (v22)
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build Astro site
        run: pnpm run build
        env:
          GITHUB_PAGES_SITE: https://${{ github.repository_owner }}.github.io
          GITHUB_PAGES_BASE: /${{ github.event.repository.name }}

      - name: Upload Astro build artifact
        uses: actions/upload-artifact@v4
        with:
          name: astro-dist
          path: ./dist

  # -----------------------------------------------------------------------------------
  # 3) Build resume: runs only if resume.tex changed
  # -----------------------------------------------------------------------------------
  build-resume:
    name: Build resume (LaTeX)
    needs: filter
    if: needs.filter.outputs.resume == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build resume.tex
        uses: xu-cheng/latex-action@v3
        with:
          root_file: resume.tex

      - name: Upload resume artifact
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: resume.pdf

  # -----------------------------------------------------------------------------------
  # 4) Deploy: runs if either build job completed
  # -----------------------------------------------------------------------------------
  deploy:
    name: Deploy to GitHub Pages
    needs: [filter, build-astro, build-resume]
    if: always() && needs.filter.outputs.any == 'true' && (needs.build-astro.result == 'success' || needs.build-astro.result == 'skipped') && (needs.build-resume.result == 'success' || needs.build-resume.result == 'skipped')
    runs-on: ubuntu-latest
    
    # Grant GITHUB_TOKEN the permissions required for Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      contents: read    # to checkout the repository
    
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Download Astro build if it was built in separate job
      - name: Download Astro build
        uses: actions/download-artifact@v4
        with:
          name: astro-dist
          path: ./dist

      # Download resume only if build-resume job actually ran and succeeded
      - name: Download resume
        uses: actions/download-artifact@v4
        with:
          name: resume-pdf
          path: ./temp-resume

      # Copy resume to dist root if it was built
      - name: Copy resume to site root
        run: cp temp-resume/resume.pdf dist/

      # Upload Pages artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
