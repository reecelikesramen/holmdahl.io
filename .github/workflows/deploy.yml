name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-astro:
    name: Build Astro site
    runs-on: ubuntu-latest
    environment:
      name: cf-workers

    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Cache resume PDF
        id: cache-resume
        uses: actions/cache@v4
        with:
          path: resume.pdf
          key: resume-${{ hashFiles('resume.tex') }}
      - name: Build resume.tex
        if: steps.cache-resume.outputs.cache-hit != 'true'
        uses: xu-cheng/latex-action@v3
        with:
          root_file: resume.tex
      - name: Move resume.pdf to public/
        shell: bash
        run: mv resume.pdf public/

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: "latest"
          package_json_file: "package.json"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          cache-dependency-path: "pnpm-lock.yaml"
      - name: Install dependencies
        shell: bash
        run: pnpm install
      - name: Build Astro site
        shell: bash
        run: pnpm run build
      - name: Publish to Cloudflare Workers
        run: npx wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
